[ArticleSelection]
# Selection of relevant articles based on the search_words
run_article_selection = False

input_path_base = data/ta_scrape100k_
output_base = data/relevant_articles_

search_words = flüchtling, migra, einwander, geflüchtete, asyl

start_year = 2007
end_year = 2019

# append to existing file or write new file:
append_to_existing_file = False

# sample part of the files for annotation
# if true write three annotation files 
use_annotation = False
training_size = 1200
seed = 0


[Analysis]
# Input data
# normaly output of ArticleSelection
input_file=data/relevant_articles_evaluation.json 

# Word to Vec Evaluation
run_w2v = False

run_by_year = False 
run_by_publisher = False 
run_by_publisher_by_year = False

number_most_sim = 50
start_year = 2007
end_year = 2019
search_words_w2v = flüchtling
output_base_w2v=data/most_similar


# Sentiment Analysis
run_senti = False
senti_methods = sentiws, generic_sentibert, finetuned_sentibert
finetuned_sentibert_path = data/finetuned-sentibert-checkpoint-225
output_senti = data/sentiment_analysis_results_full.json
search_words = flüchtling, migra, einwander, geflüchtete, asyl

# Quantitative evaluation of different methods
run_senti_eval = False
senti_eval_input = data/validation.csv
senti_eval_output = data/sentiment_analysis_eval_metrics.json

[Plotting]
sentiment_plot = False
input_file = data/sentiment_analysis_results_full.json

[WordClouds]
wordcloud_plot = True
input_file = data/most_similar_by_year.json
output_path = data/
words = flüchtling
#column: publishers or years
column_values = 2013, 2014, 2015
#column_values = welt, bild 
number_of_words_in_wordcloud = 10
